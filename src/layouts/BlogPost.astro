---
import type { BlogData } from "../content/config"
import { getRelatedBlogs } from "../utils"
import FormattedDate from "../components/FormattedDate.astro";
import Layout from "./layout.astro";
import BlogCard from "../components/Blog/BlogCard.astro"

type Props = BlogData

const { title,keywords, description, pubDate, updatedDate, heroImage,isPublished, related } = Astro.props;


const relatedBlogs = await getRelatedBlogs(related)
const haveRelatedBlogs = (relatedBlogs && relatedBlogs?.length > 0 ) ?? false
const t = pubDate.toString()
---

<Layout {...{ title,keywords, description, pubDate, updatedDate, heroImage, isPublished }}>
	<article>
		<div class="flex flex-col gap-4 my-2 mb-6">
			<h1 transition:name={"title"+t} class="text-4xl font-semibold mx-auto !w-fit">
				{title}
			</h1>
		</div>
		<div class="hero-image">
			{
				heroImage && (
					<img
						transition:name={"image"+t}
						width={1020}
						height={510}
						class="w-full md:w-10/12 mx-auto rounded-2xl "
						src={heroImage}
						alt={title}
					/>
				)
			}
		</div>
		<div class="flex flex-col gap-4 my-2 mb-6">
			<h2 transition:name={"desc"+t} class="text-2xl font-semibold mx-auto !w-fit text-center md:px-20 pt-4">
				{description} </h2>
			<div class="date mx-auto !w-fit q">
				<FormattedDate tName={"date"+t}  date={pubDate} />
				{
					updatedDate && (
						<div class="last-updated-on">
							Last updated on{" "}
							<FormattedDate date={updatedDate} />
						</div>
					)
				}
			</div>
		</div>
		<div class="prose !w-full lg:max-w-screen-lg mx-auto dark:prose-invert my-12 anmol lg:px-6">
			<slot />
		</div>
	</article>
{haveRelatedBlogs && (<h3 transition:name="related" class="text-3xl font-semibold mx-auto !w-fit text-center py-4">Related Blogs</h3>)}
  <ul class="w-full max-w-[1200px] flex flex-col md:flex-row flex-grow gap-20 md:gap-24 md:px-24">
    {haveRelatedBlogs && relatedBlogs?.map(({slug,data})=> <BlogCard {...data} size="xs" slug={slug} />)}
  </ul>
</Layout>
